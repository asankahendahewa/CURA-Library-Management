//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminMain_ModernUi_.LibraryService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryService.ICuraService")]
    public interface ICuraService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/wcf", ReplyAction="http://tempuri.org/ICuraService/wcfResponse")]
        bool wcf();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/wcf", ReplyAction="http://tempuri.org/ICuraService/wcfResponse")]
        System.Threading.Tasks.Task<bool> wcfAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/db", ReplyAction="http://tempuri.org/ICuraService/dbResponse")]
        bool db();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/db", ReplyAction="http://tempuri.org/ICuraService/dbResponse")]
        System.Threading.Tasks.Task<bool> dbAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/login_chkusr", ReplyAction="http://tempuri.org/ICuraService/login_chkusrResponse")]
        int login_chkusr(string chkusr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/login_chkusr", ReplyAction="http://tempuri.org/ICuraService/login_chkusrResponse")]
        System.Threading.Tasks.Task<int> login_chkusrAsync(string chkusr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/login_chkpw", ReplyAction="http://tempuri.org/ICuraService/login_chkpwResponse")]
        string login_chkpw(string chkpw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/login_chkpw", ReplyAction="http://tempuri.org/ICuraService/login_chkpwResponse")]
        System.Threading.Tasks.Task<string> login_chkpwAsync(string chkpw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/login_chksts", ReplyAction="http://tempuri.org/ICuraService/login_chkstsResponse")]
        string login_chksts(string chksts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/login_chksts", ReplyAction="http://tempuri.org/ICuraService/login_chkstsResponse")]
        System.Threading.Tasks.Task<string> login_chkstsAsync(string chksts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getstfdt", ReplyAction="http://tempuri.org/ICuraService/getstfdtResponse")]
        System.Data.DataTable getstfdt(string usrnm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getstfdt", ReplyAction="http://tempuri.org/ICuraService/getstfdtResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getstfdtAsync(string usrnm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/gtmmbrdt", ReplyAction="http://tempuri.org/ICuraService/gtmmbrdtResponse")]
        System.Data.DataTable gtmmbrdt(string usrnm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/gtmmbrdt", ReplyAction="http://tempuri.org/ICuraService/gtmmbrdtResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> gtmmbrdtAsync(string usrnm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getbkdata", ReplyAction="http://tempuri.org/ICuraService/getbkdataResponse")]
        System.Data.DataTable getbkdata(string bkid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getbkdata", ReplyAction="http://tempuri.org/ICuraService/getbkdataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getbkdataAsync(string bkid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/LgInsrt", ReplyAction="http://tempuri.org/ICuraService/LgInsrtResponse")]
        int LgInsrt(string StaffID, string UserName, string Password, string Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/LgInsrt", ReplyAction="http://tempuri.org/ICuraService/LgInsrtResponse")]
        System.Threading.Tasks.Task<int> LgInsrtAsync(string StaffID, string UserName, string Password, string Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/randomBooks", ReplyAction="http://tempuri.org/ICuraService/randomBooksResponse")]
        System.Data.DataTable randomBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/randomBooks", ReplyAction="http://tempuri.org/ICuraService/randomBooksResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> randomBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/SelectLibrary", ReplyAction="http://tempuri.org/ICuraService/SelectLibraryResponse")]
        System.Data.DataTable SelectLibrary(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/SelectLibrary", ReplyAction="http://tempuri.org/ICuraService/SelectLibraryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SelectLibraryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertLibrary", ReplyAction="http://tempuri.org/ICuraService/InsertLibraryResponse")]
        int InsertLibrary(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertLibrary", ReplyAction="http://tempuri.org/ICuraService/InsertLibraryResponse")]
        System.Threading.Tasks.Task<int> InsertLibraryAsync(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertLibraryNoIMG", ReplyAction="http://tempuri.org/ICuraService/InsertLibraryNoIMGResponse")]
        int InsertLibraryNoIMG(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertLibraryNoIMG", ReplyAction="http://tempuri.org/ICuraService/InsertLibraryNoIMGResponse")]
        System.Threading.Tasks.Task<int> InsertLibraryNoIMGAsync(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateLibrary", ReplyAction="http://tempuri.org/ICuraService/UpdateLibraryResponse")]
        int UpdateLibrary(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateLibrary", ReplyAction="http://tempuri.org/ICuraService/UpdateLibraryResponse")]
        System.Threading.Tasks.Task<int> UpdateLibraryAsync(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateLibraryNoIMG", ReplyAction="http://tempuri.org/ICuraService/UpdateLibraryNoIMGResponse")]
        int UpdateLibraryNoIMG(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateLibraryNoIMG", ReplyAction="http://tempuri.org/ICuraService/UpdateLibraryNoIMGResponse")]
        System.Threading.Tasks.Task<int> UpdateLibraryNoIMGAsync(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getItemImage", ReplyAction="http://tempuri.org/ICuraService/getItemImageResponse")]
        byte[] getItemImage(string itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getItemImage", ReplyAction="http://tempuri.org/ICuraService/getItemImageResponse")]
        System.Threading.Tasks.Task<byte[]> getItemImageAsync(string itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/CheckLibrary", ReplyAction="http://tempuri.org/ICuraService/CheckLibraryResponse")]
        int CheckLibrary(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/CheckLibrary", ReplyAction="http://tempuri.org/ICuraService/CheckLibraryResponse")]
        System.Threading.Tasks.Task<int> CheckLibraryAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/GetCategoryName", ReplyAction="http://tempuri.org/ICuraService/GetCategoryNameResponse")]
        string GetCategoryName(string categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/GetCategoryName", ReplyAction="http://tempuri.org/ICuraService/GetCategoryNameResponse")]
        System.Threading.Tasks.Task<string> GetCategoryNameAsync(string categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/DeleteLibrary", ReplyAction="http://tempuri.org/ICuraService/DeleteLibraryResponse")]
        int DeleteLibrary(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/DeleteLibrary", ReplyAction="http://tempuri.org/ICuraService/DeleteLibraryResponse")]
        System.Threading.Tasks.Task<int> DeleteLibraryAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/SearchLibrary", ReplyAction="http://tempuri.org/ICuraService/SearchLibraryResponse")]
        System.Data.DataTable SearchLibrary(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/SearchLibrary", ReplyAction="http://tempuri.org/ICuraService/SearchLibraryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchLibraryAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/SelectMember", ReplyAction="http://tempuri.org/ICuraService/SelectMemberResponse")]
        System.Data.DataTable SelectMember();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/SelectMember", ReplyAction="http://tempuri.org/ICuraService/SelectMemberResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SelectMemberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getMemberImage", ReplyAction="http://tempuri.org/ICuraService/getMemberImageResponse")]
        byte[] getMemberImage(string itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getMemberImage", ReplyAction="http://tempuri.org/ICuraService/getMemberImageResponse")]
        System.Threading.Tasks.Task<byte[]> getMemberImageAsync(string itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertMember", ReplyAction="http://tempuri.org/ICuraService/InsertMemberResponse")]
        int InsertMember(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertMember", ReplyAction="http://tempuri.org/ICuraService/InsertMemberResponse")]
        System.Threading.Tasks.Task<int> InsertMemberAsync(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertMemberNoIMG", ReplyAction="http://tempuri.org/ICuraService/InsertMemberNoIMGResponse")]
        int InsertMemberNoIMG(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertMemberNoIMG", ReplyAction="http://tempuri.org/ICuraService/InsertMemberNoIMGResponse")]
        System.Threading.Tasks.Task<int> InsertMemberNoIMGAsync(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/CheckMember", ReplyAction="http://tempuri.org/ICuraService/CheckMemberResponse")]
        int CheckMember(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/CheckMember", ReplyAction="http://tempuri.org/ICuraService/CheckMemberResponse")]
        System.Threading.Tasks.Task<int> CheckMemberAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateMember", ReplyAction="http://tempuri.org/ICuraService/UpdateMemberResponse")]
        int UpdateMember(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateMember", ReplyAction="http://tempuri.org/ICuraService/UpdateMemberResponse")]
        System.Threading.Tasks.Task<int> UpdateMemberAsync(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateMemberNoIMG", ReplyAction="http://tempuri.org/ICuraService/UpdateMemberNoIMGResponse")]
        int UpdateMemberNoIMG(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateMemberNoIMG", ReplyAction="http://tempuri.org/ICuraService/UpdateMemberNoIMGResponse")]
        System.Threading.Tasks.Task<int> UpdateMemberNoIMGAsync(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/DeleteMember", ReplyAction="http://tempuri.org/ICuraService/DeleteMemberResponse")]
        int DeleteMember(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/DeleteMember", ReplyAction="http://tempuri.org/ICuraService/DeleteMemberResponse")]
        System.Threading.Tasks.Task<int> DeleteMemberAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/SelectStaff", ReplyAction="http://tempuri.org/ICuraService/SelectStaffResponse")]
        System.Data.DataTable SelectStaff();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/SelectStaff", ReplyAction="http://tempuri.org/ICuraService/SelectStaffResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SelectStaffAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getStaffImage", ReplyAction="http://tempuri.org/ICuraService/getStaffImageResponse")]
        byte[] getStaffImage(string itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/getStaffImage", ReplyAction="http://tempuri.org/ICuraService/getStaffImageResponse")]
        System.Threading.Tasks.Task<byte[]> getStaffImageAsync(string itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertStaff", ReplyAction="http://tempuri.org/ICuraService/InsertStaffResponse")]
        int InsertStaff(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertStaff", ReplyAction="http://tempuri.org/ICuraService/InsertStaffResponse")]
        System.Threading.Tasks.Task<int> InsertStaffAsync(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertStaffNoIMG", ReplyAction="http://tempuri.org/ICuraService/InsertStaffNoIMGResponse")]
        int InsertStaffNoIMG(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/InsertStaffNoIMG", ReplyAction="http://tempuri.org/ICuraService/InsertStaffNoIMGResponse")]
        System.Threading.Tasks.Task<int> InsertStaffNoIMGAsync(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/CheckStaff", ReplyAction="http://tempuri.org/ICuraService/CheckStaffResponse")]
        int CheckStaff(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/CheckStaff", ReplyAction="http://tempuri.org/ICuraService/CheckStaffResponse")]
        System.Threading.Tasks.Task<int> CheckStaffAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateStaff", ReplyAction="http://tempuri.org/ICuraService/UpdateStaffResponse")]
        int UpdateStaff(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateStaff", ReplyAction="http://tempuri.org/ICuraService/UpdateStaffResponse")]
        System.Threading.Tasks.Task<int> UpdateStaffAsync(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateStaffNoIMG", ReplyAction="http://tempuri.org/ICuraService/UpdateStaffNoIMGResponse")]
        int UpdateStaffNoIMG(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/UpdateStaffNoIMG", ReplyAction="http://tempuri.org/ICuraService/UpdateStaffNoIMGResponse")]
        System.Threading.Tasks.Task<int> UpdateStaffNoIMGAsync(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/DeleteStaff", ReplyAction="http://tempuri.org/ICuraService/DeleteStaffResponse")]
        int DeleteStaff(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/DeleteStaff", ReplyAction="http://tempuri.org/ICuraService/DeleteStaffResponse")]
        System.Threading.Tasks.Task<int> DeleteStaffAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/newtrans", ReplyAction="http://tempuri.org/ICuraService/newtransResponse")]
        int newtrans(string type, string cat, string des, string amt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/newtrans", ReplyAction="http://tempuri.org/ICuraService/newtransResponse")]
        System.Threading.Tasks.Task<int> newtransAsync(string type, string cat, string des, string amt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/transldin", ReplyAction="http://tempuri.org/ICuraService/transldinResponse")]
        System.Data.DataTable transldin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/transldin", ReplyAction="http://tempuri.org/ICuraService/transldinResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> transldinAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/transldex", ReplyAction="http://tempuri.org/ICuraService/transldexResponse")]
        System.Data.DataTable transldex();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/transldex", ReplyAction="http://tempuri.org/ICuraService/transldexResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> transldexAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/Selectin", ReplyAction="http://tempuri.org/ICuraService/SelectinResponse")]
        System.Data.DataTable Selectin(string month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/Selectin", ReplyAction="http://tempuri.org/ICuraService/SelectinResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SelectinAsync(string month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/Selectex", ReplyAction="http://tempuri.org/ICuraService/SelectexResponse")]
        System.Data.DataTable Selectex(string month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/Selectex", ReplyAction="http://tempuri.org/ICuraService/SelectexResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SelectexAsync(string month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/barrownw", ReplyAction="http://tempuri.org/ICuraService/barrownwResponse")]
        int barrownw(string mid, string bid, string dp, string rt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/barrownw", ReplyAction="http://tempuri.org/ICuraService/barrownwResponse")]
        System.Threading.Tasks.Task<int> barrownwAsync(string mid, string bid, string dp, string rt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/brrwls", ReplyAction="http://tempuri.org/ICuraService/brrwlsResponse")]
        System.Data.DataTable brrwls();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/brrwls", ReplyAction="http://tempuri.org/ICuraService/brrwlsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> brrwlsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/StRes", ReplyAction="http://tempuri.org/ICuraService/StResResponse")]
        System.Data.DataTable StRes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/StRes", ReplyAction="http://tempuri.org/ICuraService/StResResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> StResAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/stResI", ReplyAction="http://tempuri.org/ICuraService/stResIResponse")]
        int stResI(string mbrID, string mbrnm, string rsbk, string rsdt, string rqsdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/stResI", ReplyAction="http://tempuri.org/ICuraService/stResIResponse")]
        System.Threading.Tasks.Task<int> stResIAsync(string mbrID, string mbrnm, string rsbk, string rsdt, string rqsdt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/mRes", ReplyAction="http://tempuri.org/ICuraService/mResResponse")]
        System.Data.DataTable mRes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/mRes", ReplyAction="http://tempuri.org/ICuraService/mResResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> mResAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/StReq", ReplyAction="http://tempuri.org/ICuraService/StReqResponse")]
        int StReq(string ReqRply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/StReq", ReplyAction="http://tempuri.org/ICuraService/StReqResponse")]
        System.Threading.Tasks.Task<int> StReqAsync(string ReqRply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/MStReq", ReplyAction="http://tempuri.org/ICuraService/MStReqResponse")]
        System.Data.DataTable MStReq();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/MStReq", ReplyAction="http://tempuri.org/ICuraService/MStReqResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> MStReqAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/mReq", ReplyAction="http://tempuri.org/ICuraService/mReqResponse")]
        int mReq(string mRq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/mReq", ReplyAction="http://tempuri.org/ICuraService/mReqResponse")]
        System.Threading.Tasks.Task<int> mReqAsync(string mRq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/mRqr", ReplyAction="http://tempuri.org/ICuraService/mRqrResponse")]
        System.Data.DataTable mRqr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuraService/mRqr", ReplyAction="http://tempuri.org/ICuraService/mRqrResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> mRqrAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICuraServiceChannel : AdminMain_ModernUi_.LibraryService.ICuraService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CuraServiceClient : System.ServiceModel.ClientBase<AdminMain_ModernUi_.LibraryService.ICuraService>, AdminMain_ModernUi_.LibraryService.ICuraService {
        
        public CuraServiceClient() {
        }
        
        public CuraServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CuraServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CuraServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CuraServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool wcf() {
            return base.Channel.wcf();
        }
        
        public System.Threading.Tasks.Task<bool> wcfAsync() {
            return base.Channel.wcfAsync();
        }
        
        public bool db() {
            return base.Channel.db();
        }
        
        public System.Threading.Tasks.Task<bool> dbAsync() {
            return base.Channel.dbAsync();
        }
        
        public int login_chkusr(string chkusr) {
            return base.Channel.login_chkusr(chkusr);
        }
        
        public System.Threading.Tasks.Task<int> login_chkusrAsync(string chkusr) {
            return base.Channel.login_chkusrAsync(chkusr);
        }
        
        public string login_chkpw(string chkpw) {
            return base.Channel.login_chkpw(chkpw);
        }
        
        public System.Threading.Tasks.Task<string> login_chkpwAsync(string chkpw) {
            return base.Channel.login_chkpwAsync(chkpw);
        }
        
        public string login_chksts(string chksts) {
            return base.Channel.login_chksts(chksts);
        }
        
        public System.Threading.Tasks.Task<string> login_chkstsAsync(string chksts) {
            return base.Channel.login_chkstsAsync(chksts);
        }
        
        public System.Data.DataTable getstfdt(string usrnm) {
            return base.Channel.getstfdt(usrnm);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getstfdtAsync(string usrnm) {
            return base.Channel.getstfdtAsync(usrnm);
        }
        
        public System.Data.DataTable gtmmbrdt(string usrnm) {
            return base.Channel.gtmmbrdt(usrnm);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> gtmmbrdtAsync(string usrnm) {
            return base.Channel.gtmmbrdtAsync(usrnm);
        }
        
        public System.Data.DataTable getbkdata(string bkid) {
            return base.Channel.getbkdata(bkid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getbkdataAsync(string bkid) {
            return base.Channel.getbkdataAsync(bkid);
        }
        
        public int LgInsrt(string StaffID, string UserName, string Password, string Category) {
            return base.Channel.LgInsrt(StaffID, UserName, Password, Category);
        }
        
        public System.Threading.Tasks.Task<int> LgInsrtAsync(string StaffID, string UserName, string Password, string Category) {
            return base.Channel.LgInsrtAsync(StaffID, UserName, Password, Category);
        }
        
        public System.Data.DataTable randomBooks() {
            return base.Channel.randomBooks();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> randomBooksAsync() {
            return base.Channel.randomBooksAsync();
        }
        
        public System.Data.DataTable SelectLibrary(string category) {
            return base.Channel.SelectLibrary(category);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SelectLibraryAsync(string category) {
            return base.Channel.SelectLibraryAsync(category);
        }
        
        public int InsertLibrary(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description, byte[] img) {
            return base.Channel.InsertLibrary(CuraID, Name, Author, ISBN, Edition, Publisher, Category, Year, NoOfPages, Quantity, Gener, Advisor, Description, img);
        }
        
        public System.Threading.Tasks.Task<int> InsertLibraryAsync(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description, byte[] img) {
            return base.Channel.InsertLibraryAsync(CuraID, Name, Author, ISBN, Edition, Publisher, Category, Year, NoOfPages, Quantity, Gener, Advisor, Description, img);
        }
        
        public int InsertLibraryNoIMG(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description) {
            return base.Channel.InsertLibraryNoIMG(CuraID, Name, Author, ISBN, Edition, Publisher, Category, Year, NoOfPages, Quantity, Gener, Advisor, Description);
        }
        
        public System.Threading.Tasks.Task<int> InsertLibraryNoIMGAsync(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description) {
            return base.Channel.InsertLibraryNoIMGAsync(CuraID, Name, Author, ISBN, Edition, Publisher, Category, Year, NoOfPages, Quantity, Gener, Advisor, Description);
        }
        
        public int UpdateLibrary(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description, byte[] img) {
            return base.Channel.UpdateLibrary(CuraID, Name, Author, ISBN, Edition, Publisher, Category, Year, NoOfPages, Quantity, Gener, Advisor, Description, img);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLibraryAsync(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description, byte[] img) {
            return base.Channel.UpdateLibraryAsync(CuraID, Name, Author, ISBN, Edition, Publisher, Category, Year, NoOfPages, Quantity, Gener, Advisor, Description, img);
        }
        
        public int UpdateLibraryNoIMG(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description) {
            return base.Channel.UpdateLibraryNoIMG(CuraID, Name, Author, ISBN, Edition, Publisher, Category, Year, NoOfPages, Quantity, Gener, Advisor, Description);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLibraryNoIMGAsync(string CuraID, string Name, string Author, string ISBN, string Edition, string Publisher, string Category, string Year, string NoOfPages, string Quantity, string Gener, string Advisor, string Description) {
            return base.Channel.UpdateLibraryNoIMGAsync(CuraID, Name, Author, ISBN, Edition, Publisher, Category, Year, NoOfPages, Quantity, Gener, Advisor, Description);
        }
        
        public byte[] getItemImage(string itemID) {
            return base.Channel.getItemImage(itemID);
        }
        
        public System.Threading.Tasks.Task<byte[]> getItemImageAsync(string itemID) {
            return base.Channel.getItemImageAsync(itemID);
        }
        
        public int CheckLibrary(string sql) {
            return base.Channel.CheckLibrary(sql);
        }
        
        public System.Threading.Tasks.Task<int> CheckLibraryAsync(string sql) {
            return base.Channel.CheckLibraryAsync(sql);
        }
        
        public string GetCategoryName(string categoryId) {
            return base.Channel.GetCategoryName(categoryId);
        }
        
        public System.Threading.Tasks.Task<string> GetCategoryNameAsync(string categoryId) {
            return base.Channel.GetCategoryNameAsync(categoryId);
        }
        
        public int DeleteLibrary(string sql) {
            return base.Channel.DeleteLibrary(sql);
        }
        
        public System.Threading.Tasks.Task<int> DeleteLibraryAsync(string sql) {
            return base.Channel.DeleteLibraryAsync(sql);
        }
        
        public System.Data.DataTable SearchLibrary(string sql) {
            return base.Channel.SearchLibrary(sql);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchLibraryAsync(string sql) {
            return base.Channel.SearchLibraryAsync(sql);
        }
        
        public System.Data.DataTable SelectMember() {
            return base.Channel.SelectMember();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SelectMemberAsync() {
            return base.Channel.SelectMemberAsync();
        }
        
        public byte[] getMemberImage(string itemID) {
            return base.Channel.getMemberImage(itemID);
        }
        
        public System.Threading.Tasks.Task<byte[]> getMemberImageAsync(string itemID) {
            return base.Channel.getMemberImageAsync(itemID);
        }
        
        public int InsertMember(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img) {
            return base.Channel.InsertMember(MemberID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, WorkEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality, img);
        }
        
        public System.Threading.Tasks.Task<int> InsertMemberAsync(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img) {
            return base.Channel.InsertMemberAsync(MemberID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, WorkEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality, img);
        }
        
        public int InsertMemberNoIMG(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality) {
            return base.Channel.InsertMemberNoIMG(MemberID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, WorkEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality);
        }
        
        public System.Threading.Tasks.Task<int> InsertMemberNoIMGAsync(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality) {
            return base.Channel.InsertMemberNoIMGAsync(MemberID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, WorkEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality);
        }
        
        public int CheckMember(string sql) {
            return base.Channel.CheckMember(sql);
        }
        
        public System.Threading.Tasks.Task<int> CheckMemberAsync(string sql) {
            return base.Channel.CheckMemberAsync(sql);
        }
        
        public int UpdateMember(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img) {
            return base.Channel.UpdateMember(MemberID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, WorkEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality, img);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMemberAsync(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img) {
            return base.Channel.UpdateMemberAsync(MemberID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, WorkEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality, img);
        }
        
        public int UpdateMemberNoIMG(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality) {
            return base.Channel.UpdateMemberNoIMG(MemberID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, WorkEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMemberNoIMGAsync(string MemberID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string WorkEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality) {
            return base.Channel.UpdateMemberNoIMGAsync(MemberID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, WorkEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality);
        }
        
        public int DeleteMember(string sql) {
            return base.Channel.DeleteMember(sql);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMemberAsync(string sql) {
            return base.Channel.DeleteMemberAsync(sql);
        }
        
        public System.Data.DataTable SelectStaff() {
            return base.Channel.SelectStaff();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SelectStaffAsync() {
            return base.Channel.SelectStaffAsync();
        }
        
        public byte[] getStaffImage(string itemID) {
            return base.Channel.getStaffImage(itemID);
        }
        
        public System.Threading.Tasks.Task<byte[]> getStaffImageAsync(string itemID) {
            return base.Channel.getStaffImageAsync(itemID);
        }
        
        public int InsertStaff(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img) {
            return base.Channel.InsertStaff(StaffID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality, img);
        }
        
        public System.Threading.Tasks.Task<int> InsertStaffAsync(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img) {
            return base.Channel.InsertStaffAsync(StaffID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality, img);
        }
        
        public int InsertStaffNoIMG(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality) {
            return base.Channel.InsertStaffNoIMG(StaffID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality);
        }
        
        public System.Threading.Tasks.Task<int> InsertStaffNoIMGAsync(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality) {
            return base.Channel.InsertStaffNoIMGAsync(StaffID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality);
        }
        
        public int CheckStaff(string sql) {
            return base.Channel.CheckStaff(sql);
        }
        
        public System.Threading.Tasks.Task<int> CheckStaffAsync(string sql) {
            return base.Channel.CheckStaffAsync(sql);
        }
        
        public int UpdateStaff(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img) {
            return base.Channel.UpdateStaff(StaffID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality, img);
        }
        
        public System.Threading.Tasks.Task<int> UpdateStaffAsync(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality, byte[] img) {
            return base.Channel.UpdateStaffAsync(StaffID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality, img);
        }
        
        public int UpdateStaffNoIMG(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality) {
            return base.Channel.UpdateStaffNoIMG(StaffID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality);
        }
        
        public System.Threading.Tasks.Task<int> UpdateStaffNoIMGAsync(string StaffID, string FirstName, string LastName, string Address1, string Address2, string City, string PostalCode, string PersonalEmail, string MobileNumber, string HomeNumber, string Gender, string Birthday, string Nationality) {
            return base.Channel.UpdateStaffNoIMGAsync(StaffID, FirstName, LastName, Address1, Address2, City, PostalCode, PersonalEmail, MobileNumber, HomeNumber, Gender, Birthday, Nationality);
        }
        
        public int DeleteStaff(string sql) {
            return base.Channel.DeleteStaff(sql);
        }
        
        public System.Threading.Tasks.Task<int> DeleteStaffAsync(string sql) {
            return base.Channel.DeleteStaffAsync(sql);
        }
        
        public int newtrans(string type, string cat, string des, string amt) {
            return base.Channel.newtrans(type, cat, des, amt);
        }
        
        public System.Threading.Tasks.Task<int> newtransAsync(string type, string cat, string des, string amt) {
            return base.Channel.newtransAsync(type, cat, des, amt);
        }
        
        public System.Data.DataTable transldin() {
            return base.Channel.transldin();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> transldinAsync() {
            return base.Channel.transldinAsync();
        }
        
        public System.Data.DataTable transldex() {
            return base.Channel.transldex();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> transldexAsync() {
            return base.Channel.transldexAsync();
        }
        
        public System.Data.DataTable Selectin(string month) {
            return base.Channel.Selectin(month);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SelectinAsync(string month) {
            return base.Channel.SelectinAsync(month);
        }
        
        public System.Data.DataTable Selectex(string month) {
            return base.Channel.Selectex(month);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SelectexAsync(string month) {
            return base.Channel.SelectexAsync(month);
        }
        
        public int barrownw(string mid, string bid, string dp, string rt) {
            return base.Channel.barrownw(mid, bid, dp, rt);
        }
        
        public System.Threading.Tasks.Task<int> barrownwAsync(string mid, string bid, string dp, string rt) {
            return base.Channel.barrownwAsync(mid, bid, dp, rt);
        }
        
        public System.Data.DataTable brrwls() {
            return base.Channel.brrwls();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> brrwlsAsync() {
            return base.Channel.brrwlsAsync();
        }
        
        public System.Data.DataTable StRes() {
            return base.Channel.StRes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> StResAsync() {
            return base.Channel.StResAsync();
        }
        
        public int stResI(string mbrID, string mbrnm, string rsbk, string rsdt, string rqsdt) {
            return base.Channel.stResI(mbrID, mbrnm, rsbk, rsdt, rqsdt);
        }
        
        public System.Threading.Tasks.Task<int> stResIAsync(string mbrID, string mbrnm, string rsbk, string rsdt, string rqsdt) {
            return base.Channel.stResIAsync(mbrID, mbrnm, rsbk, rsdt, rqsdt);
        }
        
        public System.Data.DataTable mRes() {
            return base.Channel.mRes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> mResAsync() {
            return base.Channel.mResAsync();
        }
        
        public int StReq(string ReqRply) {
            return base.Channel.StReq(ReqRply);
        }
        
        public System.Threading.Tasks.Task<int> StReqAsync(string ReqRply) {
            return base.Channel.StReqAsync(ReqRply);
        }
        
        public System.Data.DataTable MStReq() {
            return base.Channel.MStReq();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> MStReqAsync() {
            return base.Channel.MStReqAsync();
        }
        
        public int mReq(string mRq) {
            return base.Channel.mReq(mRq);
        }
        
        public System.Threading.Tasks.Task<int> mReqAsync(string mRq) {
            return base.Channel.mReqAsync(mRq);
        }
        
        public System.Data.DataTable mRqr() {
            return base.Channel.mRqr();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> mRqrAsync() {
            return base.Channel.mRqrAsync();
        }
    }
}
